<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.read_write_sharding_jdbc.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.example.read_write_sharding_jdbc.model.Order">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="product_code" jdbcType="VARCHAR" property="productCode"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="unit_price" jdbcType="DECIMAL" property="unitPrice"/>
        <result column="real_price" jdbcType="DECIMAL" property="realPrice"/>
        <result column="discount_price" jdbcType="DECIMAL" property="discountPrice"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_id, product_code, user_name, count, unit_price, real_price, discount_price,
    create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.example.read_write_sharding_jdbc.model.OrderExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from `order`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order`
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `order`
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.read_write_sharding_jdbc.model.OrderExample">
        delete from `order`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.read_write_sharding_jdbc.model.Order">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `order` (order_id, product_code, user_name,
        count, unit_price, real_price,
        discount_price, create_time, update_time
        )
        values (#{orderId,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
        #{count,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{realPrice,jdbcType=DECIMAL},
        #{discountPrice,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.example.read_write_sharding_jdbc.model.Order">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="productCode != null">
                product_code,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="unitPrice != null">
                unit_price,
            </if>
            <if test="realPrice != null">
                real_price,
            </if>
            <if test="discountPrice != null">
                discount_price,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="productCode != null">
                #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="unitPrice != null">
                #{unitPrice,jdbcType=DECIMAL},
            </if>
            <if test="realPrice != null">
                #{realPrice,jdbcType=DECIMAL},
            </if>
            <if test="discountPrice != null">
                #{discountPrice,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.read_write_sharding_jdbc.model.OrderExample" resultType="java.lang.Long">
        select count(*) from `order`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `order`
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=VARCHAR},
            </if>
            <if test="record.productCode != null">
                product_code = #{record.productCode,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.unitPrice != null">
                unit_price = #{record.unitPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.realPrice != null">
                real_price = #{record.realPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.discountPrice != null">
                discount_price = #{record.discountPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update `order`
        set id = #{record.id,jdbcType=BIGINT},
        order_id = #{record.orderId,jdbcType=VARCHAR},
        product_code = #{record.productCode,jdbcType=VARCHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        count = #{record.count,jdbcType=INTEGER},
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
        real_price = #{record.realPrice,jdbcType=DECIMAL},
        discount_price = #{record.discountPrice,jdbcType=DECIMAL},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.read_write_sharding_jdbc.model.Order">
        update `order`
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="productCode != null">
                product_code = #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="unitPrice != null">
                unit_price = #{unitPrice,jdbcType=DECIMAL},
            </if>
            <if test="realPrice != null">
                real_price = #{realPrice,jdbcType=DECIMAL},
            </if>
            <if test="discountPrice != null">
                discount_price = #{discountPrice,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.read_write_sharding_jdbc.model.Order">
    update `order`
    set order_id = #{orderId,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      real_price = #{realPrice,jdbcType=DECIMAL},
      discount_price = #{discountPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <insert id="insertOrderList">
        insert into `order`
        (order_id,
        product_code,
        user_name,
        count,
        create_time,
        update_time)
        values
        <foreach collection="orderList" item="order" separator=",">
            (
            #{order.orderId,jdbcType=VARCHAR},
            #{order.productCode,jdbcType=VARCHAR},
            #{order.userName,jdbcType=VARCHAR},
            #{order.count,jdbcType=INTEGER},
            now(), now()
            )
        </foreach>
    </insert>
</mapper>